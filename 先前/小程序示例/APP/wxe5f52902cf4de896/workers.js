
	define("workers/fib/index.js", function(require, module, exports, window,document,frames,self,location,navigator,localStorage,history,Caches,screen,alert,confirm,prompt,XMLHttpRequest,WebSocket,Reporter,webkit,WeixinJSCore){ 			
"use strict";function e(r){return r<1?0:r<=2?1:e(r-1)+e(r-2)}worker.onMessage((function(r){"execFunc_fib"===r.type&&worker.postMessage({type:"execFunc_fib",result:e(r.params[0])})})); 
 			});
 		define("workers/gaussianSplatting/index.js", function(require, module, exports, window,document,frames,self,location,navigator,localStorage,history,Caches,screen,alert,confirm,prompt,XMLHttpRequest,WebSocket,Reporter,webkit,WeixinJSCore){ 			
"use strict";var o,t,n={};function s(s){0;var r=s.viewProjectionMatrix,c=(new Date).getTime();!function(o,t,n){for(var s=function(o){return t.positions[3*o]*n[2]+t.positions[3*o+1]*n[6]+t.positions[3*o+2]*n[10]},r=-1/0,c=1/0,e=new Int32Array(t.count),a=0;a<t.count;a++){var i=4096*s(a)|0;e[a]=i,r=Math.max(r,i),c=Math.min(c,i)}for(var u=65536/(r-c),v=new Uint32Array(65536),p=0;p<t.count;p++)e[p]=(e[p]-c)*u|0,v[e[p]]++;for(var l=new Uint32Array(65536),D=1;D<65536;D++)l[D]=l[D-1]+v[D-1];for(var f=0;f<t.count;f++)o[l[e[f]]++]=f}(t,o,r);for(var e=(new Date).getTime(),a=("".concat(((e-c)/1e3).toFixed(3),"s"),0);a<o.count;a++){var i=t[a];n.colors[3*a]=o.colors[3*i],n.colors[3*a+1]=o.colors[3*i+1],n.colors[3*a+2]=o.colors[3*i+2],n.positions[3*a]=o.positions[3*i],n.positions[3*a+1]=o.positions[3*i+1],n.positions[3*a+2]=o.positions[3*i+2],n.opacities[a]=o.opacities[i],n.cov3Da[3*a]=o.cov3Ds[6*i],n.cov3Da[3*a+1]=o.cov3Ds[6*i+1],n.cov3Da[3*a+2]=o.cov3Ds[6*i+2],n.cov3Db[3*a]=o.cov3Ds[6*i+3],n.cov3Db[3*a+1]=o.cov3Ds[6*i+4],n.cov3Db[3*a+2]=o.cov3Ds[6*i+5]}var u=(new Date).getTime();"".concat(((u-e)/1e3).toFixed(3),"s");return{data:{colors:n.colors.buffer,positions:n.positions.buffer,opacities:n.opacities.buffer,cov3Da:n.cov3Da.buffer,cov3Db:n.cov3Db.buffer,gaussiansCount:o.count}}}worker.onMessage((function(r){var c;"execFunc_init"===r.type?worker.postMessage({type:"execFunc_init",result:(c=r.params[0],r.params[1],console.log("[Worker] gaussianSplatting init"),(o=c).totalCount=c.count,o.count=o.totalCount,t=new Uint32Array(o.count),console.log("[Worker] Received ".concat(o.count," gaussians")),n.positions=new Float32Array(3*o.count),n.opacities=new Float32Array(o.count),n.cov3Da=new Float32Array(3*o.count),n.cov3Db=new Float32Array(3*o.count),void(n.colors=new Float32Array(3*o.count)))}):"execFunc_sort"===r.type&&worker.postMessage({type:"execFunc_sort",result:s(r.params[0])})})); 
 			});
 	